{"version":3,"file":"content.js","mappingshrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACVA;;;;;AEAA;AACA;AACA;AACA","sources":["webpack://safesignal-extension/./src/content/scanners.js","webpack://safesignal-extension/./src/content/content.js","webpack://safesignal-extension/webpack/bootstrap","webpack://safesignal-extension/webpack/runtime/define property getters","webpack://safesignal-extension/webpack/runtime/harmony module decorator","webpack://safesignal-extension/webpack/runtime/hasOwnProperty shorthand","webpack://safesignal-extension/webpack/before-startup","webpack://safesignal-extension/webpack/startup","webpack://safesignal-extension/webpack/after-startup"],"sourcesContent":["// extension/src/content/scanners.js\r\n// Phase 2.5 - Health & Product Scanning UI\r\n// Connects to backend scan endpoints and displays results\r\n\r\nconst API_BASE_URL = 'http://localhost:8000'; // TODO: Update to production URL\r\n\r\n// ============================================================================\r\n// API CLIENT\r\n// ============================================================================\r\n\r\nclass APIClient {\r\n  constructor(baseUrl) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n  \r\n  async post(endpoint, data) {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      return await response.json();\r\n      \r\n    } catch (error) {\r\n      console.error(`API call failed: ${endpoint}`, error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// PAGE SCANNER - Detects context and calls appropriate endpoints\r\n// ============================================================================\r\n\r\nclass PageScanner {\r\n  constructor(apiClient) {\r\n    this.api = apiClient;\r\n    this.cache = new Map();\r\n    this.cacheTimeout = 30 * 60 * 1000; // 30 minutes\r\n  }\r\n  \r\n  // =========================================================================\r\n  // CONTEXT DETECTION\r\n  // =========================================================================\r\n  \r\n  detectProductContext() {\r\n    const hints = {\r\n      product_name: '',\r\n      title: ''\r\n    };\r\n    \r\n    // Try to extract product name from page\r\n    const titleEl = document.querySelector('h1, [class*=\"product-title\"], [class*=\"productTitle\"]');\r\n    if (titleEl) {\r\n      hints.product_name = titleEl.textContent.trim();\r\n    }\r\n    \r\n    // Fallback to page title\r\n    hints.title = document.title;\r\n    \r\n    // Look for product indicators\r\n    const isProduct = this._hasProductIndicators();\r\n    \r\n    return { hints, confidence: isProduct ? 0.8 : 0.3 };\r\n  }\r\n  \r\n  detectHealthContext() {\r\n    const hints = {\r\n      title: '',\r\n      claims_text: ''\r\n    };\r\n    \r\n    // Get page title\r\n    hints.title = document.title;\r\n    \r\n    // Get main content sample\r\n    const mainContent = document.querySelector('main, article, [role=\"main\"], .content');\r\n    if (mainContent) {\r\n      const text = mainContent.textContent.trim();\r\n      hints.claims_text = text.substring(0, 500);\r\n    }\r\n    \r\n    // Check for health indicators\r\n    const isHealth = this._hasHealthIndicators();\r\n    \r\n    return { hints, confidence: isHealth ? 0.8 : 0.3 };\r\n  }\r\n  \r\n  _hasProductIndicators() {\r\n    const indicators = [\r\n      document.querySelector('[class*=\"product\"]'),\r\n      document.querySelector('[class*=\"cart\"]'),\r\n      document.querySelector('[class*=\"price\"]'),\r\n      document.querySelector('[itemtype*=\"Product\"]'),\r\n      /buy|purchase|cart|price|\\$\\d+/i.test(document.body.textContent)\r\n    ];\r\n    \r\n    return indicators.filter(Boolean).length >= 2;\r\n  }\r\n  \r\n  _hasHealthIndicators() {\r\n    const indicators = [\r\n      /health|medical|symptom|disease|treatment|diagnosis/i.test(document.title),\r\n      document.querySelector('[class*=\"health\"], [class*=\"medical\"]'),\r\n      /CDC|NIH|Mayo Clinic|WebMD/i.test(document.body.textContent)\r\n    ];\r\n    \r\n    return indicators.filter(Boolean).length >= 1;\r\n  }\r\n  \r\n  // =========================================================================\r\n  // SCAN METHODS\r\n  // =========================================================================\r\n  \r\n  async scanProduct(url, mode = 'fast') {\r\n    const cacheKey = `product:${url}`;\r\n    \r\n    // Check cache\r\n    const cached = this.getCache(cacheKey);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    \r\n    // Detect product context\r\n    const { hints } = this.detectProductContext();\r\n    \r\n    try {\r\n      const response = await this.api.post('/api/scan/product', {\r\n        url,\r\n        hints,\r\n        mode\r\n      });\r\n      \r\n      // Cache successful response\r\n      this.setCache(cacheKey, response);\r\n      \r\n      return response;\r\n      \r\n    } catch (error) {\r\n      console.error('Product scan failed:', error);\r\n      \r\n      // Return error response\r\n      return {\r\n        product_name: hints.product_name,\r\n        advisory: \"Unable to check this site right now.\",\r\n        risk_signals: [],\r\n        compare_links: this._getFallbackRetailers(hints.product_name),\r\n        latency_ms: 0,\r\n        from_cache: false,\r\n        error: true\r\n      };\r\n    }\r\n  }\r\n  \r\n  async scanHealth(url, mode = 'fast') {\r\n    const cacheKey = `health:${url}`;\r\n    \r\n    // Check cache\r\n    const cached = this.getCache(cacheKey);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    \r\n    // Detect health context\r\n    const { hints } = this.detectHealthContext();\r\n    \r\n    try {\r\n      const response = await this.api.post('/api/scan/health', {\r\n        url,\r\n        hints,\r\n        mode\r\n      });\r\n      \r\n      // Cache successful response\r\n      this.setCache(cacheKey, response);\r\n      \r\n      return response;\r\n      \r\n    } catch (error) {\r\n      console.error('Health scan failed:', error);\r\n      \r\n      // Return error response with fallback links\r\n      return {\r\n        topic: hints.title || 'health information',\r\n        verdict: 'uncertain',\r\n        bullets: [\r\n          \"We couldn't check health sources right now.\",\r\n          \"Please use the trusted medical links below.\"\r\n        ],\r\n        citations: this._getFallbackHealthSources(hints.title),\r\n        latency_ms: 0,\r\n        from_cache: false,\r\n        error: true\r\n      };\r\n    }\r\n  }\r\n  \r\n  // =========================================================================\r\n  // FALLBACK HELPERS\r\n  // =========================================================================\r\n  \r\n  _getFallbackRetailers(productName) {\r\n    const query = encodeURIComponent(productName || 'product search');\r\n    return [\r\n      { retailer: 'Amazon', url: `https://www.amazon.com/s?k=${query}` },\r\n      { retailer: 'Target', url: `https://www.target.com/s?searchTerm=${query}` },\r\n      { retailer: 'Walmart', url: `https://www.walmart.com/search?q=${query}` },\r\n      { retailer: 'Google Shopping', url: `https://www.google.com/search?tbm=shop&q=${query}` }\r\n    ];\r\n  }\r\n  \r\n  _getFallbackHealthSources(topic) {\r\n    const query = encodeURIComponent(topic || 'health');\r\n    return [\r\n      { name: 'CDC', url: `https://search.cdc.gov/search/?query=${query}` },\r\n      { name: 'NIH', url: `https://search.nih.gov/search?q=${query}` },\r\n      { name: 'Mayo Clinic', url: `https://www.mayoclinic.org/search/search-results?q=${query}` },\r\n      { name: 'MedlinePlus', url: `https://medlineplus.gov/search.html?query=${query}` }\r\n    ];\r\n  }\r\n  \r\n  // =========================================================================\r\n  // CACHE MANAGEMENT\r\n  // =========================================================================\r\n  \r\n  getCache(key) {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n    \r\n    if (Date.now() > item.expires) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n  \r\n  setCache(key, data) {\r\n    this.cache.set(key, {\r\n      data,\r\n      expires: Date.now() + this.cacheTimeout\r\n    });\r\n    \r\n    // Cleanup if cache gets too big\r\n    if (this.cache.size > 100) {\r\n      const oldestKey = this.cache.keys().next().value;\r\n      this.cache.delete(oldestKey);\r\n    }\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// SCANNER UI - Modal rendering and interactions\r\n// ============================================================================\r\n\r\nclass ScannerUI {\r\n  constructor(scanner, shadowRoot) {\r\n    this.scanner = scanner;\r\n    this.shadowRoot = shadowRoot;\r\n    this.activeModal = null;\r\n    \r\n    this.addStyles();\r\n  }\r\n  \r\n  // =========================================================================\r\n  // BUTTON CLICK HANDLERS\r\n  // =========================================================================\r\n  \r\n  async handleHealthScan() {\r\n    this.showLoadingModal('Checking trusted medical sources...');\r\n    \r\n    try {\r\n      const response = await this.scanner.scanHealth(window.location.href, 'fast');\r\n      this.showHealthResults(response);\r\n      \r\n    } catch (error) {\r\n      this.showErrorModal('health', error);\r\n    }\r\n  }\r\n  \r\n  async handleProductScan() {\r\n    this.showLoadingModal('Finding trusted retailers...');\r\n    \r\n    try {\r\n      const response = await this.scanner.scanProduct(window.location.href, 'fast');\r\n      this.showProductResults(response);\r\n      \r\n    } catch (error) {\r\n      this.showErrorModal('product', error);\r\n    }\r\n  }\r\n  \r\n  // =========================================================================\r\n  // RESULT RENDERING\r\n  // =========================================================================\r\n  \r\n  showHealthResults(data) {\r\n    const verdictEmoji = {\r\n      'safe': '✅',\r\n      'mixed': '⚠️',\r\n      'harmful': '❌',\r\n      'uncertain': '❓'\r\n    };\r\n    \r\n    const modal = this.createModal();\r\n    modal.innerHTML = `\r\n      <div class=\"ss-modal-content ss-health\">\r\n        <div class=\"ss-modal-header\">\r\n          <h3>🩺 Health Information Check</h3>\r\n          <button class=\"ss-close-btn\" aria-label=\"Close\">×</button>\r\n        </div>\r\n        \r\n        <div class=\"ss-topic-badge\">\r\n          ${this.escapeHtml(data.topic)}\r\n        </div>\r\n        \r\n        <div class=\"ss-verdict-badge ss-verdict-${data.verdict}\">\r\n          ${verdictEmoji[data.verdict]} ${this.formatVerdict(data.verdict)}\r\n        </div>\r\n        \r\n        <div class=\"ss-summary\">\r\n          ${data.bullets.map(bullet => `\r\n            <p class=\"ss-bullet\">• ${this.escapeHtml(bullet)}</p>\r\n          `).join('')}\r\n        </div>\r\n        \r\n        <div class=\"ss-citations\">\r\n          <p class=\"ss-citations-label\">Read more from trusted sources:</p>\r\n          ${data.citations.map(citation => `\r\n            <a href=\"${citation.url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"ss-citation-link\">\r\n              <span class=\"ss-citation-name\">${this.escapeHtml(citation.name)}</span>\r\n              <span class=\"ss-arrow\">→</span>\r\n            </a>\r\n          `).join('')}\r\n        </div>\r\n        \r\n        <p class=\"ss-disclaimer\">\r\n          ⚕️ This is informational only. Always consult a healthcare provider for medical advice.\r\n        </p>\r\n        \r\n        ${data.from_cache ? '<p class=\"ss-cache-note\">Previously checked result</p>' : ''}\r\n      </div>\r\n    `;\r\n    \r\n    this.attachModalHandlers(modal);\r\n    this.showModal(modal);\r\n  }\r\n  \r\n  showProductResults(data) {\r\n    const modal = this.createModal();\r\n    \r\n    modal.innerHTML = `\r\n      <div class=\"ss-modal-content ss-product\">\r\n        <div class=\"ss-modal-header\">\r\n          <h3>🛒 Compare Before You Buy</h3>\r\n          <button class=\"ss-close-btn\" aria-label=\"Close\">×</button>\r\n        </div>\r\n        \r\n        ${data.product_name ? `\r\n          <div class=\"ss-product-name\">\r\n            ${this.escapeHtml(data.product_name)}\r\n          </div>\r\n        ` : ''}\r\n        \r\n        <p class=\"ss-advisory\">${this.escapeHtml(data.advisory)}</p>\r\n        \r\n        ${data.risk_signals.length > 0 ? `\r\n          <div class=\"ss-risk-signals\">\r\n            <p class=\"ss-risk-label\">⚠️ We noticed on this page:</p>\r\n            <div class=\"ss-risk-chips\">\r\n              ${data.risk_signals.map(signal => `\r\n                <span class=\"ss-risk-chip\">${this.escapeHtml(this.formatRiskSignal(signal))}</span>\r\n              `).join('')}\r\n            </div>\r\n          </div>\r\n        ` : ''}\r\n        \r\n        <div class=\"ss-compare-section\">\r\n          <p class=\"ss-compare-label\">Compare on trusted retailers:</p>\r\n          <div class=\"ss-retailer-buttons\">\r\n            ${data.compare_links.map(link => `\r\n              <a href=\"${link.url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"ss-retailer-btn\">\r\n                ${this.getRetailerIcon(link.retailer)}\r\n                <span>${this.escapeHtml(link.retailer)}</span>\r\n              </a>\r\n            `).join('')}\r\n          </div>\r\n        </div>\r\n        \r\n        ${data.from_cache ? '<p class=\"ss-cache-note\">Previously checked result</p>' : ''}\r\n      </div>\r\n    `;\r\n    \r\n    this.attachModalHandlers(modal);\r\n    this.showModal(modal);\r\n  }\r\n  \r\n  showLoadingModal(message) {\r\n    const modal = this.createModal();\r\n    modal.innerHTML = `\r\n      <div class=\"ss-modal-content ss-loading\">\r\n        <div class=\"ss-spinner\"></div>\r\n        <p>${this.escapeHtml(message)}</p>\r\n      </div>\r\n    `;\r\n    \r\n    this.showModal(modal);\r\n    return modal;\r\n  }\r\n  \r\n  showErrorModal(scanType, error) {\r\n    const configs = {\r\n      'health': {\r\n        title: '🩺 Health Check Unavailable',\r\n        body: \"We couldn't check health sources right now. Please try again or check the trusted medical sites directly.\",\r\n        links: [\r\n          { name: 'CDC', url: 'https://www.cdc.gov' },\r\n          { name: 'NIH', url: 'https://www.nih.gov' },\r\n          { name: 'Mayo Clinic', url: 'https://www.mayoclinic.org' }\r\n        ]\r\n      },\r\n      'product': {\r\n        title: '🛒 Comparison Unavailable',\r\n        body: \"We couldn't generate comparison links right now. Try searching directly on trusted retailers.\",\r\n        links: [\r\n          { name: 'Amazon', url: 'https://www.amazon.com' },\r\n          { name: 'Target', url: 'https://www.target.com' },\r\n          { name: 'Walmart', url: 'https://www.walmart.com' }\r\n        ]\r\n      }\r\n    };\r\n    \r\n    const config = configs[scanType];\r\n    const modal = this.createModal();\r\n    \r\n    modal.innerHTML = `\r\n      <div class=\"ss-modal-content ss-error\">\r\n        <div class=\"ss-modal-header\">\r\n          <h3>${config.title}</h3>\r\n          <button class=\"ss-close-btn\" aria-label=\"Close\">×</button>\r\n        </div>\r\n        <p class=\"ss-error-body\">${config.body}</p>\r\n        <div class=\"ss-fallback-links\">\r\n          ${config.links.map(link => `\r\n            <a href=\"${link.url}\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              ${this.escapeHtml(link.name)} →\r\n            </a>\r\n          `).join('')}\r\n        </div>\r\n        <button class=\"ss-retry-btn\">Try Again</button>\r\n      </div>\r\n    `;\r\n    \r\n    this.attachModalHandlers(modal, scanType);\r\n    this.showModal(modal);\r\n  }\r\n  \r\n  // =========================================================================\r\n  // MODAL MANAGEMENT\r\n  // =========================================================================\r\n  \r\n  createModal() {\r\n    const modal = document.createElement('div');\r\n    modal.className = 'ss-modal-overlay';\r\n    return modal;\r\n  }\r\n  \r\n  showModal(modal) {\r\n    // Remove any existing modal\r\n    if (this.activeModal) {\r\n      this.activeModal.remove();\r\n    }\r\n    \r\n    // Add to shadow root\r\n    this.shadowRoot.appendChild(modal);\r\n    this.activeModal = modal;\r\n    \r\n    // Animate in\r\n    requestAnimationFrame(() => {\r\n      modal.classList.add('ss-visible');\r\n    });\r\n  }\r\n  \r\n  closeModal() {\r\n    if (this.activeModal) {\r\n      this.activeModal.classList.remove('ss-visible');\r\n      setTimeout(() => {\r\n        this.activeModal?.remove();\r\n        this.activeModal = null;\r\n      }, 200);\r\n    }\r\n  }\r\n  \r\n  attachModalHandlers(modal, scanType = null) {\r\n    // Close button\r\n    const closeBtn = modal.querySelector('.ss-close-btn');\r\n    if (closeBtn) {\r\n      closeBtn.addEventListener('click', () => this.closeModal());\r\n    }\r\n    \r\n    // Click outside to close\r\n    modal.addEventListener('click', (e) => {\r\n      if (e.target === modal) {\r\n        this.closeModal();\r\n      }\r\n    });\r\n    \r\n    // Retry button\r\n    const retryBtn = modal.querySelector('.ss-retry-btn');\r\n    if (retryBtn && scanType) {\r\n      retryBtn.addEventListener('click', () => {\r\n        if (scanType === 'health') {\r\n          this.handleHealthScan();\r\n        } else if (scanType === 'product') {\r\n          this.handleProductScan();\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Escape key to close\r\n    const handleEscape = (e) => {\r\n      if (e.key === 'Escape') {\r\n        this.closeModal();\r\n        document.removeEventListener('keydown', handleEscape);\r\n      }\r\n    };\r\n    document.addEventListener('keydown', handleEscape);\r\n  }\r\n  \r\n  // =========================================================================\r\n  // FORMATTING HELPERS\r\n  // =========================================================================\r\n  \r\n  formatVerdict(verdict) {\r\n    const labels = {\r\n      'safe': 'Generally Safe',\r\n      'mixed': 'Mixed Evidence',\r\n      'harmful': 'Potentially Harmful',\r\n      'uncertain': 'More Research Needed'\r\n    };\r\n    return labels[verdict] || verdict;\r\n  }\r\n  \r\n  formatRiskSignal(signal) {\r\n    const labels = {\r\n      'clickbait_headline': 'Sensational language',\r\n      'offsite_form': 'Unusual checkout',\r\n      'suspicious_domain': 'Unfamiliar website',\r\n      'aggressive_timer': 'Countdown timer',\r\n      'low_domain_rep': 'Unknown site',\r\n      'suspicious_tld': 'Suspicious domain',\r\n      'punycode_domain': 'Look-alike domain'\r\n    };\r\n    return labels[signal] || signal.replace(/_/g, ' ');\r\n  }\r\n  \r\n  getRetailerIcon(retailer) {\r\n    const icons = {\r\n      'Amazon': '📦',\r\n      'Target': '🎯',\r\n      'Walmart': '🏪',\r\n      'Google Shopping': '🔍'\r\n    };\r\n    return icons[retailer] || '🛍️';\r\n  }\r\n  \r\n  escapeHtml(text) {\r\n    const div = document.createElement('div');\r\n    div.textContent = text;\r\n    return div.innerHTML;\r\n  }\r\n  \r\n  // =========================================================================\r\n  // STYLES\r\n  // =========================================================================\r\n  \r\n  addStyles() {\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      /* Modal Overlay */\r\n      .ss-modal-overlay {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100vw;\r\n        height: 100vh;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 2147483647;\r\n        opacity: 0;\r\n        transition: opacity 0.2s ease;\r\n      }\r\n      \r\n      .ss-modal-overlay.ss-visible {\r\n        opacity: 1;\r\n      }\r\n      \r\n      /* Modal Content */\r\n      .ss-modal-content {\r\n        background: white;\r\n        border-radius: 16px;\r\n        padding: 24px;\r\n        max-width: 480px;\r\n        width: 90%;\r\n        max-height: 80vh;\r\n        overflow-y: auto;\r\n        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n        transform: scale(0.9);\r\n        transition: transform 0.2s ease;\r\n      }\r\n      \r\n      .ss-visible .ss-modal-content {\r\n        transform: scale(1);\r\n      }\r\n      \r\n      /* Modal Header */\r\n      .ss-modal-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-bottom: 16px;\r\n        padding-bottom: 12px;\r\n        border-bottom: 2px solid #e0e0e0;\r\n      }\r\n      \r\n      .ss-modal-header h3 {\r\n        margin: 0;\r\n        font-size: 20px;\r\n        font-weight: 600;\r\n        color: #333;\r\n      }\r\n      \r\n      .ss-close-btn {\r\n        background: none;\r\n        border: none;\r\n        font-size: 28px;\r\n        color: #666;\r\n        cursor: pointer;\r\n        padding: 0;\r\n        width: 32px;\r\n        height: 32px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border-radius: 50%;\r\n        transition: background 0.2s;\r\n      }\r\n      \r\n      .ss-close-btn:hover {\r\n        background: #f0f0f0;\r\n      }\r\n      \r\n      /* Health Results */\r\n      .ss-topic-badge {\r\n        background: #e3f2fd;\r\n        color: #1565c0;\r\n        padding: 8px 12px;\r\n        border-radius: 8px;\r\n        font-weight: 500;\r\n        margin-bottom: 12px;\r\n        font-size: 14px;\r\n      }\r\n      \r\n      .ss-verdict-badge {\r\n        padding: 10px 16px;\r\n        border-radius: 8px;\r\n        font-weight: 600;\r\n        margin-bottom: 16px;\r\n        text-align: center;\r\n        font-size: 16px;\r\n      }\r\n      \r\n      .ss-verdict-safe {\r\n        background: #e8f5e9;\r\n        color: #2e7d32;\r\n      }\r\n      \r\n      .ss-verdict-mixed {\r\n        background: #fff3e0;\r\n        color: #e65100;\r\n      }\r\n      \r\n      .ss-verdict-harmful {\r\n        background: #ffebee;\r\n        color: #c62828;\r\n      }\r\n      \r\n      .ss-verdict-uncertain {\r\n        background: #f5f5f5;\r\n        color: #616161;\r\n      }\r\n      \r\n      .ss-summary {\r\n        margin-bottom: 16px;\r\n      }\r\n      \r\n      .ss-bullet {\r\n        margin: 8px 0;\r\n        font-size: 15px;\r\n        line-height: 1.6;\r\n        color: #424242;\r\n      }\r\n      \r\n      .ss-citations {\r\n        margin-top: 20px;\r\n        padding-top: 16px;\r\n        border-top: 1px solid #e0e0e0;\r\n      }\r\n      \r\n      .ss-citations-label {\r\n        font-weight: 600;\r\n        margin-bottom: 12px;\r\n        color: #424242;\r\n        font-size: 14px;\r\n      }\r\n      \r\n      .ss-citation-link {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 10px 12px;\r\n        background: #f5f5f5;\r\n        border-radius: 8px;\r\n        margin-bottom: 8px;\r\n        text-decoration: none;\r\n        color: #1976d2;\r\n        transition: all 0.2s;\r\n      }\r\n      \r\n      .ss-citation-link:hover {\r\n        background: #e3f2fd;\r\n        transform: translateX(4px);\r\n      }\r\n      \r\n      .ss-citation-name {\r\n        font-weight: 500;\r\n      }\r\n      \r\n      .ss-arrow {\r\n        font-size: 18px;\r\n      }\r\n      \r\n      .ss-disclaimer {\r\n        margin-top: 16px;\r\n        padding: 12px;\r\n        background: #fff9c4;\r\n        border-radius: 8px;\r\n        font-size: 13px;\r\n        color: #827717;\r\n        line-height: 1.5;\r\n      }\r\n      \r\n      /* Product Results */\r\n      .ss-product-name {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #333;\r\n        margin-bottom: 12px;\r\n        padding: 12px;\r\n        background: #f5f5f5;\r\n        border-radius: 8px;\r\n      }\r\n      \r\n      .ss-advisory {\r\n        font-size: 15px;\r\n        color: #424242;\r\n        margin-bottom: 16px;\r\n        line-height: 1.6;\r\n      }\r\n      \r\n      .ss-risk-signals {\r\n        margin-bottom: 20px;\r\n        padding: 12px;\r\n        background: #fff3e0;\r\n        border-radius: 8px;\r\n      }\r\n      \r\n      .ss-risk-label {\r\n        font-weight: 600;\r\n        color: #e65100;\r\n        margin-bottom: 8px;\r\n        font-size: 14px;\r\n      }\r\n      \r\n      .ss-risk-chips {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 6px;\r\n      }\r\n      \r\n      .ss-risk-chip {\r\n        display: inline-block;\r\n        padding: 4px 10px;\r\n        background: white;\r\n        border: 1px solid #ffb74d;\r\n        border-radius: 12px;\r\n        font-size: 12px;\r\n        color: #e65100;\r\n      }\r\n      \r\n      .ss-compare-section {\r\n        margin-top: 20px;\r\n        padding-top: 16px;\r\n        border-top: 1px solid #e0e0e0;\r\n      }\r\n      \r\n      .ss-compare-label {\r\n        font-weight: 600;\r\n        margin-bottom: 12px;\r\n        color: #424242;\r\n        font-size: 14px;\r\n      }\r\n      \r\n      .ss-retailer-buttons {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        gap: 10px;\r\n      }\r\n      \r\n      .ss-retailer-btn {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 8px;\r\n        padding: 12px;\r\n        background: white;\r\n        border: 2px solid #e0e0e0;\r\n        border-radius: 8px;\r\n        text-decoration: none;\r\n        color: #424242;\r\n        font-weight: 500;\r\n        font-size: 14px;\r\n        transition: all 0.2s;\r\n      }\r\n      \r\n      .ss-retailer-btn:hover {\r\n        border-color: #1976d2;\r\n        background: #e3f2fd;\r\n        transform: translateY(-2px);\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n      }\r\n      \r\n      /* Loading State */\r\n      .ss-loading {\r\n        text-align: center;\r\n        padding: 40px 24px;\r\n      }\r\n      \r\n      .ss-spinner {\r\n        width: 48px;\r\n        height: 48px;\r\n        border: 4px solid #e0e0e0;\r\n        border-top-color: #1976d2;\r\n        border-radius: 50%;\r\n        animation: ss-spin 0.8s linear infinite;\r\n        margin: 0 auto 16px;\r\n      }\r\n      \r\n      @keyframes ss-spin {\r\n        to { transform: rotate(360deg); }\r\n      }\r\n      \r\n      .ss-loading p {\r\n        color: #666;\r\n        font-size: 15px;\r\n      }\r\n      \r\n      /* Error State */\r\n      .ss-error-body {\r\n        font-size: 15px;\r\n        color: #424242;\r\n        line-height: 1.6;\r\n        margin-bottom: 16px;\r\n      }\r\n      \r\n      .ss-fallback-links {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 8px;\r\n        margin-bottom: 16px;\r\n      }\r\n      \r\n      .ss-fallback-links a {\r\n        padding: 10px 12px;\r\n        background: #f5f5f5;\r\n        border-radius: 8px;\r\n        text-decoration: none;\r\n        color: #1976d2;\r\n        font-weight: 500;\r\n        transition: all 0.2s;\r\n      }\r\n      \r\n      .ss-fallback-links a:hover {\r\n        background: #e3f2fd;\r\n      }\r\n      \r\n      .ss-retry-btn {\r\n        width: 100%;\r\n        padding: 12px;\r\n        background: #1976d2;\r\n        color: white;\r\n        border: none;\r\n        border-radius: 8px;\r\n        font-weight: 600;\r\n        font-size: 15px;\r\n        cursor: pointer;\r\n        transition: background 0.2s;\r\n      }\r\n      \r\n      .ss-retry-btn:hover {\r\n        background: #1565c0;\r\n      }\r\n      \r\n      /* Cache Note */\r\n      .ss-cache-note {\r\n        margin-top: 12px;\r\n        font-size: 12px;\r\n        color: #9e9e9e;\r\n        text-align: center;\r\n      }\r\n      \r\n      /* Scrollbar Styling */\r\n      .ss-modal-content::-webkit-scrollbar {\r\n        width: 8px;\r\n      }\r\n      \r\n      .ss-modal-content::-webkit-scrollbar-track {\r\n        background: #f5f5f5;\r\n        border-radius: 4px;\r\n      }\r\n      \r\n      .ss-modal-content::-webkit-scrollbar-thumb {\r\n        background: #bdbdbd;\r\n        border-radius: 4px;\r\n      }\r\n      \r\n      .ss-modal-content::-webkit-scrollbar-thumb:hover {\r\n        background: #9e9e9e;\r\n      }\r\n    `;\r\n    \r\n    this.shadowRoot.appendChild(style);\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// EXPORTS\r\n// ============================================================================\r\n\r\nexport { PageScanner, ScannerUI, APIClient };","// SafeSignal Content Script - Fixed Visibility Edition + Scanner Wiring\r\n// Version: 4.1-visibility-fix + scanners\r\n\r\nconst SAFESIGNAL_BUILD = 'content-2025-10-03-v4.1-scanner-wired';\r\nconst API_BASE_URL = 'http://localhost:8000';\r\n\r\nconsole.info('[SafeSignal] Build:', SAFESIGNAL_BUILD);\r\n\r\n// ← ADDED: Import scanner modules\r\nimport { PageScanner, ScannerUI, APIClient } from './scanners.js';\r\n\r\nclass SafeSignalBadge {\r\n    constructor() {\r\n        // Core elements\r\n        this.host = null;\r\n        this.root = null;\r\n        \r\n        // State management\r\n        this.currentState = 'checking';\r\n        this.contextData = null;\r\n        this.isMenuOpen = false;\r\n        this.activeModal = null;\r\n        \r\n        // Positioning\r\n        this.position = 'bottom-right';\r\n        \r\n        // Size mode (elder-friendly defaults)\r\n        this.sizeMode = 'large';\r\n        \r\n        // SPA detection\r\n        this.currentUrl = null; // Start as null so first check always runs\r\n        this.mutationObserver = null;\r\n        this.pageDebounceTimer = null;\r\n        this.lastCheckByUrl = new Map();\r\n        this.checkCooldown = 30 * 60 * 1000;\r\n        \r\n        // ← ADDED: Scanner services (initialized after Shadow DOM creation)\r\n        this.apiClient = null;\r\n        this.scanner = null;\r\n        this.scannerUI = null;\r\n        \r\n        // Context detection\r\n        this.contextProbe = new SafeSignalContextProbe();\r\n        \r\n        // User preferences\r\n        this.userPreferences = {\r\n            position: 'bottom-right',\r\n            sizeMode: 'large',\r\n            miniChipsEnabled: true\r\n        };\r\n        \r\n        this.init();\r\n    }\r\n    \r\n    async init() {\r\n        if (this.shouldSkipInjection()) return;\r\n        \r\n        await this.loadUserPreferences();\r\n        this.createBadge();\r\n        \r\n        // ← ADDED: Initialize scanners after badge creation (needs this.root)\r\n        this.initScanners();\r\n        \r\n        this.initSpaDetection();\r\n        this.setupKeyboardShortcuts();\r\n        this.setupResizeHandler();\r\n        \r\n        console.log('[SafeSignal] Badge initialized and visible');\r\n        this.checkIfPageChanged('initial_load');\r\n    }\r\n    \r\n    shouldSkipInjection() {\r\n        if (document.getElementById('safesignal-host')) {\r\n            console.log('[SafeSignal] Badge already exists');\r\n            return true;\r\n        }\r\n        \r\n        const protocol = window.location.protocol;\r\n        if (['chrome:', 'chrome-extension:', 'moz-extension:', 'about:'].includes(protocol)) {\r\n            return true;\r\n        }\r\n        \r\n        if (window.top !== window) {\r\n            console.log('[SafeSignal] Skipping iframe');\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    // ← ADDED: Scanner initialization\r\n    initScanners() {\r\n        try {\r\n            this.apiClient = new APIClient(API_BASE_URL);\r\n            this.scanner = new PageScanner(this.apiClient);\r\n            this.scannerUI = new ScannerUI(this.scanner, this.root);\r\n            console.log('[SafeSignal] ✅ Scanners initialized');\r\n        } catch (error) {\r\n            console.error('[SafeSignal] Scanner initialization failed:', error);\r\n        }\r\n    }\r\n    \r\n    // ==================== BADGE CREATION ====================\r\n    \r\n    createBadge() {\r\n        // Create host container\r\n        this.host = document.createElement('div');\r\n        this.host.setAttribute('id', 'safesignal-host');\r\n        this.root = this.host.attachShadow({ mode: 'open' });\r\n        \r\n        // Get size configuration\r\n        const sizes = {\r\n            normal: { badge: 56, font: 18, chip: 32, chipFont: 14 },\r\n            large: { badge: 64, font: 20, chip: 36, chipFont: 15 },\r\n            xl: { badge: 72, font: 22, chip: 40, chipFont: 16 }\r\n        };\r\n        const config = sizes[this.sizeMode] || sizes.large;\r\n        \r\n        // Create Shadow DOM structure with all your original CSS\r\n        this.root.innerHTML = `\r\n            <style>\r\n                * {\r\n                    margin: 0;\r\n                    padding: 0;\r\n                    box-sizing: border-box;\r\n                }\r\n                \r\n                /* Main container - FIXED positioning */\r\n                .safesignal-container {\r\n                    position: fixed !important;\r\n                    z-index: 2147483647 !important;\r\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif !important;\r\n                    pointer-events: auto !important;\r\n                    display: flex !important;\r\n                    flex-direction: column !important;\r\n                    align-items: center !important;\r\n                    gap: 8px !important;\r\n                }\r\n                \r\n                /* Position classes */\r\n                .pos-top-left { top: 20px !important; left: 20px !important; }\r\n                .pos-top-right { top: 20px !important; right: 20px !important; }\r\n                .pos-bottom-left { bottom: 20px !important; left: 20px !important; }\r\n                .pos-bottom-right { bottom: 20px !important; right: 20px !important; }\r\n                .pos-mid-left { top: 50% !important; left: 20px !important; transform: translateY(-50%) !important; }\r\n                .pos-mid-right { top: 50% !important; right: 20px !important; transform: translateY(-50%) !important; }\r\n                \r\n                /* Mini chips wrapper */\r\n                .chips-wrapper {\r\n                    display: none;\r\n                    flex-direction: column;\r\n                    gap: 6px;\r\n                    max-width: 280px;\r\n                }\r\n                \r\n                .chips-wrapper.visible {\r\n                    display: flex;\r\n                }\r\n                \r\n                .mini-chip {\r\n                    height: ${config.chip}px;\r\n                    padding: 0 16px;\r\n                    border-radius: ${config.chip / 2}px;\r\n                    font-size: ${config.chipFont}px;\r\n                    font-weight: 600;\r\n                    color: white;\r\n                    cursor: pointer;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                    white-space: nowrap;\r\n                    transition: all 0.2s ease;\r\n                    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n                }\r\n                \r\n                .mini-chip:hover {\r\n                    transform: translateY(-2px);\r\n                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n                }\r\n                \r\n                .chip-product {\r\n                    background: linear-gradient(135deg, #2196f3 0%, #1976d2 100%);\r\n                }\r\n                \r\n                .chip-health {\r\n                    background: linear-gradient(135deg, #9c27b0 0%, #7b1fa2 100%);\r\n                }\r\n                \r\n                /* Badge wrapper */\r\n                .badge-wrapper {\r\n                    position: relative;\r\n                }\r\n                \r\n                /* Main badge */\r\n                .badge {\r\n                    height: ${config.badge}px;\r\n                    min-width: ${config.badge}px;\r\n                    padding: 0 20px;\r\n                    padding-right: 48px;\r\n                    border-radius: ${config.badge / 2}px;\r\n                    font-size: ${config.font}px;\r\n                    font-weight: 700;\r\n                    color: white;\r\n                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n                    cursor: pointer;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 10px;\r\n                    white-space: nowrap;\r\n                    transition: all 0.2s ease;\r\n                    position: relative;\r\n                }\r\n                \r\n                .badge:hover {\r\n                    transform: scale(1.02);\r\n                    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);\r\n                }\r\n                \r\n                /* State colors */\r\n                .state-checking .badge {\r\n                    background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);\r\n                    animation: pulse 2s infinite;\r\n                }\r\n                \r\n                .state-ok .badge {\r\n                    background: linear-gradient(135deg, #10b981 0%, #059669 100%);\r\n                }\r\n                \r\n                .state-warning .badge {\r\n                    background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);\r\n                }\r\n                \r\n                .state-danger .badge {\r\n                    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\r\n                }\r\n                \r\n                @keyframes pulse {\r\n                    0%, 100% { opacity: 1; }\r\n                    50% { opacity: 0.8; }\r\n                }\r\n                \r\n                .badge-icon {\r\n                    font-size: ${config.font + 2}px;\r\n                    line-height: 1;\r\n                }\r\n                \r\n                .badge-label {\r\n                    font-size: ${config.font}px;\r\n                    line-height: 1;\r\n                }\r\n                \r\n                /* Menu toggle button */\r\n                .menu-btn {\r\n                    position: absolute;\r\n                    right: 8px;\r\n                    top: 50%;\r\n                    transform: translateY(-50%);\r\n                    width: 32px;\r\n                    height: 32px;\r\n                    background: rgba(255, 255, 255, 0.2);\r\n                    border: none;\r\n                    border-radius: 50%;\r\n                    color: white;\r\n                    font-size: 20px;\r\n                    line-height: 1;\r\n                    cursor: pointer;\r\n                    transition: all 0.2s ease;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                }\r\n                \r\n                .menu-btn:hover {\r\n                    background: rgba(255, 255, 255, 0.3);\r\n                }\r\n                \r\n                /* Menu panel */\r\n                .menu {\r\n                    position: absolute;\r\n                    bottom: calc(100% + 12px);\r\n                    right: 0;\r\n                    background: white;\r\n                    border-radius: 12px;\r\n                    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);\r\n                    border: 1px solid #e5e7eb;\r\n                    padding: 16px;\r\n                    min-width: 220px;\r\n                    display: none;\r\n                    z-index: 1000;\r\n                }\r\n                \r\n                .menu.open {\r\n                    display: block;\r\n                }\r\n                \r\n                /* Adjust menu position for top placements */\r\n                .pos-top-left .menu,\r\n                .pos-top-right .menu {\r\n                    bottom: auto;\r\n                    top: calc(100% + 12px);\r\n                }\r\n                \r\n                .menu-section {\r\n                    margin-bottom: 12px;\r\n                }\r\n                \r\n                .menu-section:last-child {\r\n                    margin-bottom: 0;\r\n                }\r\n                \r\n                .menu-label {\r\n                    font-size: 11px;\r\n                    font-weight: 600;\r\n                    color: #6b7280;\r\n                    text-transform: uppercase;\r\n                    letter-spacing: 0.05em;\r\n                    margin-bottom: 8px;\r\n                }\r\n                \r\n                /* Position grid */\r\n                .position-grid {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(3, 1fr);\r\n                    gap: 4px;\r\n                }\r\n                \r\n                .pos-btn {\r\n                    width: 32px;\r\n                    height: 32px;\r\n                    border: 1px solid #d1d5db;\r\n                    border-radius: 6px;\r\n                    background: white;\r\n                    cursor: pointer;\r\n                    transition: all 0.2s ease;\r\n                    position: relative;\r\n                }\r\n                \r\n                .pos-btn:hover {\r\n                    background: #f3f4f6;\r\n                    border-color: #9ca3af;\r\n                }\r\n                \r\n                .pos-btn.active {\r\n                    background: #7c3aed;\r\n                    border-color: #7c3aed;\r\n                }\r\n                \r\n                .pos-btn.active::after {\r\n                    content: '✓';\r\n                    position: absolute;\r\n                    top: 50%;\r\n                    left: 50%;\r\n                    transform: translate(-50%, -50%);\r\n                    color: white;\r\n                    font-size: 14px;\r\n                    font-weight: 700;\r\n                }\r\n                \r\n                /* Size controls */\r\n                .size-controls {\r\n                    display: flex;\r\n                    gap: 4px;\r\n                }\r\n                \r\n                .size-btn {\r\n                    flex: 1;\r\n                    padding: 6px 12px;\r\n                    border: 1px solid #d1d5db;\r\n                    border-radius: 6px;\r\n                    background: white;\r\n                    font-size: 13px;\r\n                    font-weight: 500;\r\n                    cursor: pointer;\r\n                    transition: all 0.2s ease;\r\n                }\r\n                \r\n                .size-btn:hover {\r\n                    background: #f3f4f6;\r\n                    border-color: #9ca3af;\r\n                }\r\n                \r\n                .size-btn.active {\r\n                    background: #7c3aed;\r\n                    color: white;\r\n                    border-color: #7c3aed;\r\n                }\r\n                \r\n                /* Modal overlay */\r\n                .modal-overlay {\r\n                    display: none;\r\n                    position: fixed;\r\n                    top: 0;\r\n                    left: 0;\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    background: rgba(0, 0, 0, 0.5);\r\n                    z-index: 2147483646;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                }\r\n                \r\n                .modal-overlay.visible {\r\n                    display: flex;\r\n                }\r\n                \r\n                .modal {\r\n                    background: white;\r\n                    border-radius: 16px;\r\n                    padding: 24px;\r\n                    max-width: 400px;\r\n                    width: 90%;\r\n                    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n                }\r\n                \r\n                .modal-title {\r\n                    font-size: 20px;\r\n                    font-weight: 700;\r\n                    color: #111827;\r\n                    margin-bottom: 12px;\r\n                }\r\n                \r\n                .modal-body {\r\n                    font-size: 16px;\r\n                    line-height: 1.5;\r\n                    color: #6b7280;\r\n                    margin-bottom: 20px;\r\n                }\r\n                \r\n                .modal-close {\r\n                    width: 100%;\r\n                    padding: 12px;\r\n                    border-radius: 8px;\r\n                    background: #7c3aed;\r\n                    color: white;\r\n                    font-size: 16px;\r\n                    font-weight: 600;\r\n                    border: none;\r\n                    cursor: pointer;\r\n                    transition: all 0.2s ease;\r\n                }\r\n                \r\n                .modal-close:hover {\r\n                    background: #6d28d9;\r\n                }\r\n                \r\n                /* Accessibility */\r\n                @media (prefers-reduced-motion: reduce) {\r\n                    * {\r\n                        transition: none !important;\r\n                        animation: none !important;\r\n                    }\r\n                }\r\n            </style>\r\n            \r\n            <!-- Main container with position class -->\r\n            <div class=\"safesignal-container pos-bottom-right\" id=\"main-container\">\r\n                <!-- Mini chips wrapper (will be populated dynamically) -->\r\n                <div class=\"chips-wrapper\" id=\"chips-wrapper\"></div>\r\n                \r\n                <!-- Badge wrapper -->\r\n                <div class=\"badge-wrapper\">\r\n                    <div class=\"badge state-checking\" \r\n                         role=\"button\" \r\n                         tabindex=\"0\" \r\n                         aria-live=\"polite\" \r\n                         aria-label=\"SafeSignal: Checking\"\r\n                         id=\"main-badge\">\r\n                        <span class=\"badge-icon\">⧗</span>\r\n                        <span class=\"badge-label\">Checking</span>\r\n                        <button class=\"menu-btn\" \r\n                                aria-label=\"SafeSignal Menu\"\r\n                                aria-expanded=\"false\"\r\n                                id=\"menu-btn\">\r\n                            ⋯\r\n                        </button>\r\n                    </div>\r\n                    \r\n                    <!-- Menu -->\r\n                    <div class=\"menu\" id=\"menu\" role=\"dialog\">\r\n                        <div class=\"menu-section\">\r\n                            <div class=\"menu-label\">Position</div>\r\n                            <div class=\"position-grid\">\r\n                                <button class=\"pos-btn\" data-pos=\"top-left\" title=\"Top Left\"></button>\r\n                                <button class=\"pos-btn\" data-pos=\"top-center\" title=\"Top Center\" disabled style=\"opacity: 0.3\"></button>\r\n                                <button class=\"pos-btn\" data-pos=\"top-right\" title=\"Top Right\"></button>\r\n                                <button class=\"pos-btn\" data-pos=\"mid-left\" title=\"Middle Left\"></button>\r\n                                <button class=\"pos-btn\" data-pos=\"mid-center\" title=\"Center\" disabled style=\"opacity: 0.3\"></button>\r\n                                <button class=\"pos-btn\" data-pos=\"mid-right\" title=\"Middle Right\"></button>\r\n                                <button class=\"pos-btn\" data-pos=\"bottom-left\" title=\"Bottom Left\"></button>\r\n                                <button class=\"pos-btn\" data-pos=\"bottom-center\" title=\"Bottom Center\" disabled style=\"opacity: 0.3\"></button>\r\n                                <button class=\"pos-btn active\" data-pos=\"bottom-right\" title=\"Bottom Right\"></button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class=\"menu-section\">\r\n                            <div class=\"menu-label\">Size</div>\r\n                            <div class=\"size-controls\">\r\n                                <button class=\"size-btn\" data-size=\"normal\">Normal</button>\r\n                                <button class=\"size-btn active\" data-size=\"large\">Large</button>\r\n                                <button class=\"size-btn\" data-size=\"xl\">XL</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <!-- Modal -->\r\n            <div class=\"modal-overlay\" id=\"modal-overlay\">\r\n                <div class=\"modal\" role=\"dialog\" aria-modal=\"true\">\r\n                    <h2 class=\"modal-title\" id=\"modal-title\">Feature Coming Soon</h2>\r\n                    <div class=\"modal-body\" id=\"modal-body\">\r\n                        This feature is being developed and will be available soon.\r\n                    </div>\r\n                    <button class=\"modal-close\" id=\"modal-close\">Got it</button>\r\n                </div>\r\n            </div>\r\n        `;\r\n        \r\n        // Add to page - CRITICAL: append to body\r\n        document.body.appendChild(this.host);\r\n        \r\n        // Get element references\r\n        this.container = this.root.getElementById('main-container');\r\n        this.badge = this.root.getElementById('main-badge');\r\n        this.menuBtn = this.root.getElementById('menu-btn');\r\n        this.menu = this.root.getElementById('menu');\r\n        this.chipsWrapper = this.root.getElementById('chips-wrapper');\r\n        this.modalOverlay = this.root.getElementById('modal-overlay');\r\n        \r\n        // Initialize event listeners\r\n        this.initEventListeners();\r\n        \r\n        // Apply saved position\r\n        this.setPosition(this.userPreferences.position);\r\n        \r\n        // Apply saved size\r\n        this.setSize(this.userPreferences.sizeMode);\r\n        \r\n        console.log('[SafeSignal] Badge created and should be visible');\r\n    }\r\n    \r\n    // ==================== EVENT LISTENERS ====================\r\n    \r\n    initEventListeners() {\r\n        // Badge click\r\n        this.badge.addEventListener('click', (e) => {\r\n            if (e.target === this.menuBtn || this.menuBtn.contains(e.target)) return;\r\n            console.log('[SafeSignal] Badge clicked');\r\n        });\r\n        \r\n        // Menu toggle\r\n        this.menuBtn.addEventListener('click', (e) => {\r\n            e.stopPropagation();\r\n            this.toggleMenu();\r\n        });\r\n        \r\n        // Position buttons\r\n        this.root.querySelectorAll('.pos-btn:not([disabled])').forEach(btn => {\r\n            btn.addEventListener('click', () => {\r\n                const position = btn.dataset.pos;\r\n                this.setPosition(position);\r\n                this.saveUserPreferences();\r\n            });\r\n        });\r\n        \r\n        // Size buttons\r\n        this.root.querySelectorAll('.size-btn').forEach(btn => {\r\n            btn.addEventListener('click', () => {\r\n                const size = btn.dataset.size;\r\n                this.setSize(size);\r\n                this.saveUserPreferences();\r\n            });\r\n        });\r\n        \r\n        // Modal close\r\n        this.root.getElementById('modal-close').addEventListener('click', () => {\r\n            this.closeModal();\r\n        });\r\n        \r\n        // Close menu on outside click\r\n        document.addEventListener('click', (e) => {\r\n            if (this.isMenuOpen && !this.host.contains(e.target)) {\r\n                this.closeMenu();\r\n            }\r\n        });\r\n    }\r\n    \r\n    // ==================== POSITION MANAGEMENT ====================\r\n    \r\n    setPosition(position) {\r\n        const validPositions = ['top-left', 'top-right', 'bottom-left', 'bottom-right', 'mid-left', 'mid-right'];\r\n        \r\n        if (!validPositions.includes(position)) {\r\n            position = 'bottom-right';\r\n        }\r\n        \r\n        // Remove all position classes\r\n        validPositions.forEach(pos => {\r\n            this.container.classList.remove(`pos-${pos}`);\r\n        });\r\n        \r\n        // Add new position class\r\n        this.container.classList.add(`pos-${position}`);\r\n        \r\n        // Update active button\r\n        this.root.querySelectorAll('.pos-btn').forEach(btn => {\r\n            btn.classList.toggle('active', btn.dataset.pos === position);\r\n        });\r\n        \r\n        this.position = position;\r\n        this.userPreferences.position = position;\r\n        \r\n        console.log(`[SafeSignal] Position set to: ${position}`);\r\n    }\r\n    \r\n    // ==================== SIZE MANAGEMENT ====================\r\n    \r\n    setSize(size) {\r\n        const sizes = {\r\n            normal: { badge: 56, font: 18, chip: 32, chipFont: 14 },\r\n            large: { badge: 64, font: 20, chip: 36, chipFont: 15 },\r\n            xl: { badge: 72, font: 22, chip: 40, chipFont: 16 }\r\n        };\r\n        \r\n        const config = sizes[size] || sizes.large;\r\n        \r\n        // Update badge size\r\n        this.badge.style.height = `${config.badge}px`;\r\n        this.badge.style.minWidth = `${config.badge}px`;\r\n        this.badge.style.borderRadius = `${config.badge / 2}px`;\r\n        this.badge.style.fontSize = `${config.font}px`;\r\n        \r\n        // Update chips size\r\n        this.root.querySelectorAll('.mini-chip').forEach(chip => {\r\n            chip.style.height = `${config.chip}px`;\r\n            chip.style.borderRadius = `${config.chip / 2}px`;\r\n            chip.style.fontSize = `${config.chipFont}px`;\r\n        });\r\n        \r\n        // Update active button\r\n        this.root.querySelectorAll('.size-btn').forEach(btn => {\r\n            btn.classList.toggle('active', btn.dataset.size === size);\r\n        });\r\n        \r\n        this.sizeMode = size;\r\n        this.userPreferences.sizeMode = size;\r\n        \r\n        console.log(`[SafeSignal] Size set to: ${size}`);\r\n    }\r\n    \r\n    // ==================== MENU MANAGEMENT ====================\r\n    \r\n    toggleMenu() {\r\n        if (this.isMenuOpen) {\r\n            this.closeMenu();\r\n        } else {\r\n            this.openMenu();\r\n        }\r\n    }\r\n    \r\n    openMenu() {\r\n        this.menu.classList.add('open');\r\n        this.menuBtn.setAttribute('aria-expanded', 'true');\r\n        this.isMenuOpen = true;\r\n    }\r\n    \r\n    closeMenu() {\r\n        this.menu.classList.remove('open');\r\n        this.menuBtn.setAttribute('aria-expanded', 'false');\r\n        this.isMenuOpen = false;\r\n    }\r\n    \r\n    // ==================== MODAL MANAGEMENT ====================\r\n    \r\n    showModal(title, body) {\r\n        this.root.getElementById('modal-title').textContent = title;\r\n        this.root.getElementById('modal-body').textContent = body;\r\n        this.modalOverlay.classList.add('visible');\r\n        this.activeModal = this.modalOverlay;\r\n    }\r\n    \r\n    closeModal() {\r\n        this.modalOverlay.classList.remove('visible');\r\n        this.activeModal = null;\r\n    }\r\n    \r\n    // ==================== MINI CHIPS MANAGEMENT ====================\r\n    \r\n    updateMiniChips() {\r\n        // Run context detection\r\n        this.contextData = this.contextProbe.detectContext();\r\n        \r\n        // Clear existing chips\r\n        this.chipsWrapper.innerHTML = '';\r\n        \r\n        // Add product chip if relevant\r\n        if (this.contextData.product.confidence > 0.3) {\r\n            const productChip = document.createElement('div');\r\n            productChip.className = 'mini-chip chip-product';\r\n            productChip.innerHTML = '🛒 Find Safer Deals';\r\n            productChip.addEventListener('click', () => this.handleProductScan());\r\n            this.chipsWrapper.appendChild(productChip);\r\n        }\r\n        \r\n        // Add health chip if relevant\r\n        if (this.contextData.health.confidence > 0.3) {\r\n            const healthChip = document.createElement('div');\r\n            healthChip.className = 'mini-chip chip-health';\r\n            healthChip.innerHTML = '🏥 Check Health Claims';\r\n            healthChip.addEventListener('click', () => this.handleHealthScan());\r\n            this.chipsWrapper.appendChild(healthChip);\r\n        }\r\n        \r\n        // Show chips if we have any\r\n        if (this.chipsWrapper.children.length > 0) {\r\n            this.chipsWrapper.classList.add('visible');\r\n        } else {\r\n            this.chipsWrapper.classList.remove('visible');\r\n        }\r\n    }\r\n    \r\n    // ← ADDED: Scanner handlers\r\n    async handleProductScan() {\r\n        if (!this.scannerUI) {\r\n            console.error('[SafeSignal] Scanner UI not initialized');\r\n            return;\r\n        }\r\n        console.log('[SafeSignal] 🛒 Starting product scan...');\r\n        try {\r\n            await this.scannerUI.handleProductScan();\r\n        } catch (error) {\r\n            console.error('[SafeSignal] Product scan error:', error);\r\n        }\r\n    }\r\n    \r\n    async handleHealthScan() {\r\n        if (!this.scannerUI) {\r\n            console.error('[SafeSignal] Scanner UI not initialized');\r\n            return;\r\n        }\r\n        console.log('[SafeSignal] 🏥 Starting health scan...');\r\n        try {\r\n            await this.scannerUI.handleHealthScan();\r\n        } catch (error) {\r\n            console.error('[SafeSignal] Health scan error:', error);\r\n        }\r\n    }\r\n    \r\n    // ==================== STATE MANAGEMENT ====================\r\n    \r\n    getStateIcon() {\r\n        const icons = {\r\n            checking: '⧗',\r\n            ok: '✅',\r\n            warning: '⚠️',\r\n            danger: '❌'\r\n        };\r\n        return icons[this.currentState] || '❓';\r\n    }\r\n    \r\n    getStateText() {\r\n        const texts = {\r\n            checking: 'Checking',\r\n            ok: 'Looks Good',\r\n            warning: 'Be Careful',\r\n            danger: 'High Risk'\r\n        };\r\n        return texts[this.currentState] || 'Unknown';\r\n    }\r\n    \r\n    updateBadgeState(state) {\r\n        this.currentState = state;\r\n        \r\n        // Update badge state classes\r\n        this.container.classList.remove('state-checking', 'state-ok', 'state-warning', 'state-danger');\r\n        this.container.classList.add(`state-${state}`);\r\n        \r\n        // Update icon and text\r\n        const icon = this.root.querySelector('.badge-icon');\r\n        const label = this.root.querySelector('.badge-label');\r\n        \r\n        if (icon) icon.textContent = this.getStateIcon();\r\n        if (label) label.textContent = this.getStateText();\r\n        \r\n        // Update ARIA label\r\n        this.badge.setAttribute('aria-label', `SafeSignal: ${this.getStateText()}`);\r\n        \r\n        // Update mini chips based on new state\r\n        this.updateMiniChips();\r\n        \r\n        console.log(`[SafeSignal] State updated to: ${state}`);\r\n    }\r\n    \r\n    // ==================== PAGE CHANGE DETECTION ====================\r\n    \r\n    async checkIfPageChanged(trigger = 'unknown') {\r\n        const url = window.location.href;\r\n        \r\n        // Skip if URL hasn't changed and not initial load\r\n        if (this.currentUrl === url && trigger !== 'initial_load') {\r\n            return;\r\n        }\r\n        \r\n        // Check cooldown\r\n        const lastCheck = this.lastCheckByUrl.get(url);\r\n        if (lastCheck && (Date.now() - lastCheck) < this.checkCooldown) {\r\n            console.log('[SafeSignal] Skipping check (cooldown)');\r\n            return;\r\n        }\r\n        \r\n        this.currentUrl = url;\r\n        console.log(`[SafeSignal] Checking page (${trigger}): ${url}`);\r\n        \r\n        // Set checking state\r\n        this.updateBadgeState('checking');\r\n        \r\n        try {\r\n            // Simple heuristic analysis (your original logic)\r\n            const pageText = document.body.innerText.toLowerCase();\r\n            let state = 'ok';\r\n            \r\n            // Check for suspicious patterns\r\n            const suspiciousTerms = [\r\n                'urgent', 'act now', 'limited time', 'congratulations', 'claim your', 'verify account',\r\n                'suspended', 'click here immediately', 'confirm identity'\r\n            ];\r\n            \r\n            const warningTerms = [\r\n                'sale', 'discount', 'offer', 'deal', 'subscribe',\r\n                'download', 'update required', 'install'\r\n            ];\r\n            \r\n            // Count suspicious indicators\r\n            const suspiciousCount = suspiciousTerms.filter(term => pageText.includes(term)).length;\r\n            const warningCount = warningTerms.filter(term => pageText.includes(term)).length;\r\n            \r\n            // Determine state based on indicators\r\n            if (suspiciousCount >= 3) {\r\n                state = 'danger';\r\n            } else if (suspiciousCount >= 1 || warningCount >= 3) {\r\n                state = 'warning';\r\n            } else {\r\n                // Check URL patterns\r\n                const urlLower = url.toLowerCase();\r\n                if (urlLower.includes('phishing') || urlLower.includes('suspicious')) {\r\n                    state = 'danger';\r\n                } else if (urlLower.includes('shop') || urlLower.includes('promo')) {\r\n                    state = 'warning';\r\n                }\r\n            }\r\n            \r\n            console.log(`[SafeSignal] Analysis complete: ${state}`);\r\n            this.updateBadgeState(state);\r\n            this.lastCheckByUrl.set(url, Date.now());\r\n            \r\n        } catch (error) {\r\n            console.error('[SafeSignal] Analysis failed:', error);\r\n            this.updateBadgeState('ok'); // Default to safe on error\r\n        }\r\n    }\r\n    \r\n    // ==================== SPA DETECTION ====================\r\n    \r\n    initSpaDetection() {\r\n        // Patch history API\r\n        const originalPushState = history.pushState;\r\n        const originalReplaceState = history.replaceState;\r\n        \r\n        history.pushState = (...args) => {\r\n            originalPushState.apply(history, args);\r\n            this.checkIfPageChanged('pushState');\r\n        };\r\n        \r\n        history.replaceState = (...args) => {\r\n            originalReplaceState.apply(history, args);\r\n            this.checkIfPageChanged('replaceState');\r\n        };\r\n        \r\n        // Listen to popstate\r\n        window.addEventListener('popstate', () => {\r\n            this.checkIfPageChanged('popstate');\r\n        });\r\n        \r\n        // Mutation observer for content changes\r\n        this.mutationObserver = new MutationObserver(() => {\r\n            this.debouncedPageCheck();\r\n        });\r\n        \r\n        this.mutationObserver.observe(document.body, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n        \r\n        console.log('[SafeSignal] SPA detection enabled');\r\n    }\r\n    \r\n    debouncedPageCheck() {\r\n        clearTimeout(this.pageDebounceTimer);\r\n        this.pageDebounceTimer = setTimeout(() => {\r\n            this.checkIfPageChanged('mutation');\r\n        }, 800);\r\n    }\r\n    \r\n    // ==================== KEYBOARD SHORTCUTS ====================\r\n    \r\n    setupKeyboardShortcuts() {\r\n        document.addEventListener('keydown', (e) => {\r\n            // Alt+S to toggle SafeSignal visibility\r\n            if (e.altKey && e.key === 's') {\r\n                e.preventDefault();\r\n                this.toggleVisibility();\r\n            }\r\n            \r\n            // Escape to close menu/modal\r\n            if (e.key === 'Escape') {\r\n                if (this.activeModal) {\r\n                    this.closeModal();\r\n                } else if (this.isMenuOpen) {\r\n                    this.closeMenu();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    toggleVisibility() {\r\n        if (this.host.style.display === 'none') {\r\n            this.host.style.display = '';\r\n            console.log('[SafeSignal] Badge shown');\r\n        } else {\r\n            this.host.style.display = 'none';\r\n            console.log('[SafeSignal] Badge hidden');\r\n        }\r\n    }\r\n    \r\n    // ==================== RESIZE HANDLER ====================\r\n    \r\n    setupResizeHandler() {\r\n        let resizeTimer;\r\n        \r\n        window.addEventListener('resize', () => {\r\n            if (resizeTimer) {\r\n                clearTimeout(resizeTimer);\r\n            }\r\n            \r\n            resizeTimer = setTimeout(() => {\r\n                // Ensure badge stays visible after resize\r\n                const rect = this.container.getBoundingClientRect();\r\n                if (rect.right > window.innerWidth || rect.bottom > window.innerHeight) {\r\n                    console.log('[SafeSignal] Adjusting position after resize');\r\n                    this.setPosition(this.position);\r\n                }\r\n            }, 250);\r\n        });\r\n    }\r\n    \r\n    // ==================== USER PREFERENCES ====================\r\n    \r\n    async loadUserPreferences() {\r\n        try {\r\n            const stored = await chrome.storage.sync.get([\r\n                'position',\r\n                'sizeMode',\r\n                'miniChipsEnabled'\r\n            ]);\r\n            \r\n            if (stored.position) {\r\n                this.userPreferences.position = stored.position;\r\n            }\r\n            \r\n            if (stored.sizeMode) {\r\n                this.userPreferences.sizeMode = stored.sizeMode;\r\n                this.sizeMode = stored.sizeMode;\r\n            }\r\n            \r\n            if (stored.miniChipsEnabled !== undefined) {\r\n                this.userPreferences.miniChipsEnabled = stored.miniChipsEnabled;\r\n            }\r\n            \r\n            console.log('[SafeSignal] Preferences loaded:', this.userPreferences);\r\n        } catch (error) {\r\n            console.warn('[SafeSignal] Could not load preferences:', error);\r\n            // Use defaults if storage fails\r\n        }\r\n    }\r\n    \r\n    async saveUserPreferences() {\r\n        try {\r\n            await chrome.storage.sync.set({\r\n                position: this.userPreferences.position,\r\n                sizeMode: this.userPreferences.sizeMode,\r\n                miniChipsEnabled: this.userPreferences.miniChipsEnabled\r\n            });\r\n            \r\n            console.log('[SafeSignal] Preferences saved');\r\n        } catch (error) {\r\n            console.warn('[SafeSignal] Could not save preferences:', error);\r\n        }\r\n    }\r\n    \r\n    // ==================== CLEANUP ====================\r\n    \r\n    destroy() {\r\n        // Remove event listeners\r\n        if (this.mutationObserver) {\r\n            this.mutationObserver.disconnect();\r\n        }\r\n        \r\n        // Remove DOM elements\r\n        if (this.host && this.host.parentNode) {\r\n            this.host.parentNode.removeChild(this.host);\r\n        }\r\n        \r\n        // Clear maps\r\n        this.lastCheckByUrl.clear();\r\n        \r\n        console.log('[SafeSignal] Badge destroyed');\r\n    }\r\n}\r\n\r\n// ==================== CONTEXT PROBE (YOUR ORIGINAL) ====================\r\n\r\nclass SafeSignalContextProbe {\r\n    constructor() {\r\n        this.indicators = {\r\n            product: {\r\n                terms: ['price', 'buy now', 'add to cart', 'shop', 'deal', 'sale', 'discount'],\r\n                selectors: [\r\n                    '[itemtype*=\"Product\"]',\r\n                    '[data-price]',\r\n                    'button[name=\"add-to-cart\"]',\r\n                    '.product-price',\r\n                    '.price'\r\n                ],\r\n                patterns: [/\\$\\d+/, /€\\d+/, /£\\d+/]\r\n            },\r\n            health: {\r\n                terms: ['symptom', 'treatment', 'cure', 'diagnosis', 'medical', 'health', 'doctor'],\r\n                suspiciousTerms: ['miracle cure', 'guaranteed', 'breakthrough', 'secret'],\r\n                selectors: [\r\n                    'article[about*=\"health\"]',\r\n                    '.medical-content',\r\n                    '[data-medical-info]'\r\n                ]\r\n            }\r\n        };\r\n    }\r\n    \r\n    detectContext() {\r\n        const results = {\r\n            product: { confidence: 0, signals: [] },\r\n            health: { confidence: 0, signals: [] }\r\n        };\r\n        \r\n        const pageText = this.getPageText();\r\n        const pageTitle = document.title.toLowerCase();\r\n        const pageUrl = window.location.href.toLowerCase();\r\n        \r\n        results.product = this.analyzeProductSignals(pageText, pageTitle, pageUrl);\r\n        results.health = this.analyzeHealthSignals(pageText, pageTitle, pageUrl);\r\n        \r\n        return results;\r\n    }\r\n    \r\n    getPageText() {\r\n        const contentSelectors = ['main', 'article', '[role=\"main\"]', '#content', '.content'];\r\n        let text = '';\r\n        \r\n        for (const selector of contentSelectors) {\r\n            const element = document.querySelector(selector);\r\n            if (element) {\r\n                text += (element.innerText || element.textContent || '') + ' ';\r\n            }\r\n        }\r\n        \r\n        if (!text.trim()) {\r\n            const bodyText = document.body.innerText || document.body.textContent || '';\r\n            text = bodyText;\r\n        }\r\n        \r\n        return text.toLowerCase().slice(0, 5000);\r\n    }\r\n    \r\n    analyzeProductSignals(pageText, pageTitle, pageUrl) {\r\n        let confidence = 0;\r\n        const signals = [];\r\n        \r\n        const termMatches = this.indicators.product.terms.filter(term => \r\n            pageText.includes(term) || pageTitle.includes(term)\r\n        );\r\n        \r\n        if (termMatches.length > 0) {\r\n            confidence += Math.min(termMatches.length * 0.1, 0.4);\r\n            signals.push(`Found ${termMatches.length} shopping terms`);\r\n        }\r\n        \r\n        const selectorMatches = this.indicators.product.selectors.filter(selector => {\r\n            try {\r\n                return document.querySelector(selector) !== null;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        });\r\n        \r\n        if (selectorMatches.length > 0) {\r\n            confidence += Math.min(selectorMatches.length * 0.2, 0.4);\r\n            signals.push(`Found ${selectorMatches.length} product elements`);\r\n        }\r\n        \r\n        const priceMatches = this.indicators.product.patterns.filter(pattern =>\r\n            pattern.test(pageText)\r\n        );\r\n        \r\n        if (priceMatches.length > 0) {\r\n            confidence += 0.2;\r\n            signals.push('Found price indicators');\r\n        }\r\n        \r\n        if (/shop|store|product|cart|checkout|buy/.test(pageUrl)) {\r\n            confidence += 0.2;\r\n            signals.push('Shopping URL pattern');\r\n        }\r\n        \r\n        return { confidence: Math.min(confidence, 1), signals };\r\n    }\r\n    \r\n    analyzeHealthSignals(pageText, pageTitle, pageUrl) {\r\n        let confidence = 0;\r\n        const signals = [];\r\n        \r\n        const termMatches = this.indicators.health.terms.filter(term =>\r\n            pageText.includes(term) || pageTitle.includes(term)\r\n        );\r\n        \r\n        if (termMatches.length > 0) {\r\n            confidence += Math.min(termMatches.length * 0.1, 0.4);\r\n            signals.push(`Found ${termMatches.length} health terms`);\r\n        }\r\n        \r\n        const suspiciousMatches = this.indicators.health.suspiciousTerms.filter(term =>\r\n            pageText.includes(term)\r\n        );\r\n        \r\n        if (suspiciousMatches.length > 0) {\r\n            confidence += Math.min(suspiciousMatches.length * 0.15, 0.3);\r\n            signals.push('Detected suspicious health claims');\r\n        }\r\n        \r\n        const selectorMatches = this.indicators.health.selectors.filter(selector => {\r\n            try {\r\n                return document.querySelector(selector) !== null;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        });\r\n        \r\n        if (selectorMatches.length > 0) {\r\n            confidence += 0.2;\r\n            signals.push('Found health-related markup');\r\n        }\r\n        \r\n        if (/health|medical|medicine|treatment|symptom|drug/.test(pageUrl)) {\r\n            confidence += 0.2;\r\n            signals.push('Health URL pattern');\r\n        }\r\n        \r\n        return { confidence: Math.min(confidence, 1), signals };\r\n    }\r\n}\r\n\r\n// ==================== INITIALIZATION ====================\r\n\r\nfunction initializeSafeSignal() {\r\n    // Clean up any existing instance\r\n    if (window.safeSignalInstance) {\r\n        window.safeSignalInstance.destroy();\r\n        window.safeSignalInstance = null;\r\n    }\r\n    \r\n    // Create new instance\r\n    window.safeSignalInstance = new SafeSignalBadge();\r\n    console.log('[SafeSignal] Extension initialized with scanners');\r\n}\r\n\r\n// Wait for DOM to be ready\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', initializeSafeSignal);\r\n} else {\r\n    // DOM is already loaded, initialize immediately\r\n    initializeSafeSignal();\r\n}\r\n\r\n// Handle dynamic iframe injections\r\nif (window.self === window.top) {\r\n    // Only in main window, not iframes\r\n    console.log('[SafeSignal] Content script loaded in main window');\r\n}\r\n\r\n// Export for testing\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = { SafeSignalBadge, SafeSignalContextProbe };\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(611);\n",""],"names":[],"sourceRoot":""}